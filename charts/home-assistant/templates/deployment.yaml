apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "home-assistant.fullname" . }}
  labels:
    {{- include "home-assistant.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "home-assistant.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "home-assistant.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "home-assistant.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- include "home-assistant.volumeMounts" . | nindent 12 }}
      {{- if .Values.postgresql.enabled }}
      initContainers:
        - name: init-db
          image: alpine:3.7
          command: 
            - "sh"
            - "-c"
            - |
              DB_URL=postgresql://${DB_USER}:${DB_PASS}@${DB_HOST}/${DB_NAME};
              if grep -q 'postgres_db_url' /config/secrets.yaml; then 
                sed -i "s#postgres_db_url:.*#postgres_db_url: ${DB_URL}#" /config/secrets.yaml;
              else 
                echo "postgres_db_url: ${DB_URL}" >> /config/secrets.yaml;
              fi
          env:
            - name: DB_HOST
              value: {{ .Release.Name | trunc 63 | trimSuffix "-" }}-postgresql
            - name: DB_USER
              value: {{ default "postgres" .Values.postgresql.auth.username }}
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ default (cat .Release.Name "-postgresql") .Values.postgresql.auth.existingSecret | trunc 63 | trimSuffix "-" }}
                  key: postgres-password
            - name: DB_NAME
              value: {{ default "postgres" .Values.postgresql.auth.database }}
          volumeMounts:
            {{- include "home-assistant.volumeMounts" . | nindent 12 }}
      {{- end }}
      volumes:    
        {{- include "home-assistant.volumes" . | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
